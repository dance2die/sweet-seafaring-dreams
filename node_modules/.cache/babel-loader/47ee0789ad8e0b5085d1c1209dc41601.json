{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Documents/Code/sweet-seafaring-dreams/src/App.js\";\nimport React, { useState } from \"react\";\nimport CityInput from \"./components/CityInput\";\nimport WeatherContainer from \"./components/WeatherContainer\";\nimport Footer from \"./components/Footer\";\nimport cityList from \"./cityList\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [cityAndCountry, setCityAndCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [weather, setWeather] = useState(null); // const [weather, setWeather] = useState({\n  //   coord: {\n  //     lon: -84.8,\n  //     lat: 34.17\n  //   },\n  //   weather: [\n  //     {\n  //       id: 804,\n  //       main: \"\",\n  //       description: \"poopy pants\",\n  //       icon: \"04n\"\n  //     }\n  //   ],\n  //   base: \"stations\",\n  //   main: {\n  //     temp: 284.43,\n  //     feels_like: 280.64,\n  //     temp_min: 281.48,\n  //     temp_max: 286.15,\n  //     pressure: 1014,\n  //     humidity: 70\n  //   },\n  //   visibility: 11265,\n  //   wind: {\n  //     speed: 4.1,\n  //     deg: 290\n  //   },\n  //   clouds: {\n  //     all: 90\n  //   },\n  //   dt: 1582742037,\n  //   sys: {\n  //     type: 1,\n  //     id: 5432,\n  //     country: \"US\",\n  //     sunrise: 1582719148,\n  //     sunset: 1582759933\n  //   },\n  //   timezone: -18000,\n  //   id: 4186531,\n  //   name: \"Cartersville\",\n  //   cod: 200\n  // });\n\n  const apiKey = \"14715648d5b5f1ec6117655c97b891de\";\n\n  const getTime = () => {\n    return new Date().getHours();\n  };\n\n  const changeHandler = e => {\n    setCityAndCountry(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setCity(cityAndCountry.split(\",\")[0]);\n    setCountry(cityAndCountry.split(\",\")[1].trim()); // TODO: create two more States. One for city only and one for country code only\n\n    const result = cityList.find( // gets city code from citList.json\n    el => el.name.toLowerCase() === cityAndCountry.toLowerCase());\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?id=${result.id}&appid=${apiKey}`).then(res => {\n      setWeather(res.data);\n      return res;\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flex justify-center items-center flex-col h-screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(CityInput, {\n    changeHandler: changeHandler,\n    submitHandler: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), weather === null ? null : React.createElement(WeatherContainer, {\n    weather: weather,\n    userTime: getTime(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mark/Documents/Code/sweet-seafaring-dreams/src/App.js"],"names":["React","useState","CityInput","WeatherContainer","Footer","cityList","axios","App","cityAndCountry","setCityAndCountry","city","setCity","country","setCountry","weather","setWeather","apiKey","getTime","Date","getHours","changeHandler","e","target","value","submitHandler","preventDefault","split","trim","result","find","el","name","toLowerCase","get","id","then","res","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC,CAJa,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMe,MAAM,GAAG,kCAAf;;AAEA,QAAMC,OAAO,GAAG,MAAM;AACpB,WAAO,IAAIC,IAAJ,GAAWC,QAAX,EAAP;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACzBZ,IAAAA,iBAAiB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAGH,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACI,cAAF;AAEAd,IAAAA,OAAO,CAACH,cAAc,CAACkB,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAD,CAAP;AACAb,IAAAA,UAAU,CAACL,cAAc,CAACkB,KAAf,CAAqB,GAArB,EAA0B,CAA1B,EAA6BC,IAA7B,EAAD,CAAV,CAJyB,CAMzB;;AAEA,UAAMC,MAAM,GAAGvB,QAAQ,CAACwB,IAAT,EACb;AACAC,IAAAA,EAAE,IAAIA,EAAE,CAACC,IAAH,CAAQC,WAAR,OAA0BxB,cAAc,CAACwB,WAAf,EAFnB,CAAf;AAKA1B,IAAAA,KAAK,CACF2B,GADH,CAEK,sDAAqDL,MAAM,CAACM,EAAG,UAASlB,MAAO,EAFpF,EAIGmB,IAJH,CAIQC,GAAG,IAAI;AACXrB,MAAAA,UAAU,CAACqB,GAAG,CAACC,IAAL,CAAV;AACA,aAAOD,GAAP;AACD,KAPH;AAQD,GArBD;;AAuBA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,aAAa,EAAEhB,aADjB;AAEE,IAAA,aAAa,EAAEI,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKGV,OAAO,KAAK,IAAZ,GAAmB,IAAnB,GACC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEA,OAA3B;AAAoC,IAAA,QAAQ,EAAEG,OAAO,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF,EAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD;;AAED,eAAeV,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CityInput from \"./components/CityInput\";\nimport WeatherContainer from \"./components/WeatherContainer\";\nimport Footer from \"./components/Footer\";\nimport cityList from \"./cityList\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [cityAndCountry, setCityAndCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  // const [weather, setWeather] = useState({\n  //   coord: {\n  //     lon: -84.8,\n  //     lat: 34.17\n  //   },\n  //   weather: [\n  //     {\n  //       id: 804,\n  //       main: \"\",\n  //       description: \"poopy pants\",\n  //       icon: \"04n\"\n  //     }\n  //   ],\n  //   base: \"stations\",\n  //   main: {\n  //     temp: 284.43,\n  //     feels_like: 280.64,\n  //     temp_min: 281.48,\n  //     temp_max: 286.15,\n  //     pressure: 1014,\n  //     humidity: 70\n  //   },\n  //   visibility: 11265,\n  //   wind: {\n  //     speed: 4.1,\n  //     deg: 290\n  //   },\n  //   clouds: {\n  //     all: 90\n  //   },\n  //   dt: 1582742037,\n  //   sys: {\n  //     type: 1,\n  //     id: 5432,\n  //     country: \"US\",\n  //     sunrise: 1582719148,\n  //     sunset: 1582759933\n  //   },\n  //   timezone: -18000,\n  //   id: 4186531,\n  //   name: \"Cartersville\",\n  //   cod: 200\n  // });\n  const apiKey = \"14715648d5b5f1ec6117655c97b891de\";\n\n  const getTime = () => {\n    return new Date().getHours();\n  };\n\n  const changeHandler = e => {\n    setCityAndCountry(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    setCity(cityAndCountry.split(\",\")[0]);\n    setCountry(cityAndCountry.split(\",\")[1].trim());\n\n    // TODO: create two more States. One for city only and one for country code only\n\n    const result = cityList.find(\n      // gets city code from citList.json\n      el => el.name.toLowerCase() === cityAndCountry.toLowerCase()\n    );\n\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?id=${result.id}&appid=${apiKey}`\n      )\n      .then(res => {\n        setWeather(res.data);\n        return res;\n      });\n  };\n\n  return (\n    <>\n      <div className=\"flex justify-center items-center flex-col h-screen\">\n        <CityInput\n          changeHandler={changeHandler}\n          submitHandler={submitHandler}\n        />\n        {weather === null ? null : (\n          <WeatherContainer weather={weather} userTime={getTime()} />\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}