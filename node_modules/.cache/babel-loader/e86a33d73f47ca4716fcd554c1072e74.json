{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Documents/Code/sweet-seafaring-dreams/src/App.js\";\nimport React, { useState } from \"react\";\nimport CityInput from \"./components/CityInput\";\nimport WeatherContainer from \"./components/WeatherContainer\";\nimport Footer from \"./components/Footer\";\nimport cityList from \"./cityList\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [cityAndCountry, setCityAndCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\"); // const [weather, setWeather] = useState(null);\n\n  const [weather, setWeather] = useState({\n    coord: {\n      lon: -84.8,\n      lat: 34.17\n    },\n    weather: [{\n      id: 804,\n      main: \"\",\n      description: \"poopy pants\",\n      icon: \"04n\"\n    }],\n    base: \"stations\",\n    main: {\n      temp: 284.43,\n      feels_like: 280.64,\n      temp_min: 281.48,\n      temp_max: 286.15,\n      pressure: 1014,\n      humidity: 70\n    },\n    visibility: 11265,\n    wind: {\n      speed: 4.1,\n      deg: 290\n    },\n    clouds: {\n      all: 90\n    },\n    dt: 1582742037,\n    sys: {\n      type: 1,\n      id: 5432,\n      country: \"US\",\n      sunrise: 1582719148,\n      sunset: 1582759933\n    },\n    timezone: -18000,\n    id: 4186531,\n    name: \"Cartersville\",\n    cod: 200\n  });\n  const apiKey = \"14715648d5b5f1ec6117655c97b891de\";\n\n  const getTime = () => {\n    return new Date().getHours();\n  };\n\n  const changeHandler = e => {\n    setCityAndCountry(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setCity(cityAndCountry.split(\",\")[0]);\n    setCountry(cityAndCountry.split(\",\")[1].trim()); // TODO: create two more States. One for city only and one for country code only\n\n    const result = cityList.find( // gets city code from citList.json\n    el => el.name.toLowerCase() === cityAndCountry.toLowerCase());\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?id=${result.id}&appid=${apiKey}`).then(res => {\n      setWeather(res.data);\n      return res;\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flex justify-center items-center flex-col h-screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(CityInput, {\n    changeHandler: changeHandler,\n    submitHandler: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), weather === null ? null : React.createElement(WeatherContainer, {\n    weather: weather,\n    userTime: getTime(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mark/Documents/Code/sweet-seafaring-dreams/src/App.js"],"names":["React","useState","CityInput","WeatherContainer","Footer","cityList","axios","App","cityAndCountry","setCityAndCountry","city","setCity","country","setCountry","weather","setWeather","coord","lon","lat","id","main","description","icon","base","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","wind","speed","deg","clouds","all","dt","sys","type","sunrise","sunset","timezone","name","cod","apiKey","getTime","Date","getHours","changeHandler","e","target","value","submitHandler","preventDefault","split","trim","result","find","el","toLowerCase","get","then","res","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport CityInput from \"./components/CityInput\";\nimport WeatherContainer from \"./components/WeatherContainer\";\nimport Footer from \"./components/Footer\";\nimport cityList from \"./cityList\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [cityAndCountry, setCityAndCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  // const [weather, setWeather] = useState(null);\n  const [weather, setWeather] = useState({\n    coord: {\n      lon: -84.8,\n      lat: 34.17\n    },\n    weather: [\n      {\n        id: 804,\n        main: \"\",\n        description: \"poopy pants\",\n        icon: \"04n\"\n      }\n    ],\n    base: \"stations\",\n    main: {\n      temp: 284.43,\n      feels_like: 280.64,\n      temp_min: 281.48,\n      temp_max: 286.15,\n      pressure: 1014,\n      humidity: 70\n    },\n    visibility: 11265,\n    wind: {\n      speed: 4.1,\n      deg: 290\n    },\n    clouds: {\n      all: 90\n    },\n    dt: 1582742037,\n    sys: {\n      type: 1,\n      id: 5432,\n      country: \"US\",\n      sunrise: 1582719148,\n      sunset: 1582759933\n    },\n    timezone: -18000,\n    id: 4186531,\n    name: \"Cartersville\",\n    cod: 200\n  });\n  const apiKey = \"14715648d5b5f1ec6117655c97b891de\";\n\n  const getTime = () => {\n    return new Date().getHours();\n  };\n\n  const changeHandler = e => {\n    setCityAndCountry(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    setCity(cityAndCountry.split(\",\")[0]);\n    setCountry(cityAndCountry.split(\",\")[1].trim());\n\n    // TODO: create two more States. One for city only and one for country code only\n\n    const result = cityList.find(\n      // gets city code from citList.json\n      el => el.name.toLowerCase() === cityAndCountry.toLowerCase()\n    );\n\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?id=${result.id}&appid=${apiKey}`\n      )\n      .then(res => {\n        setWeather(res.data);\n        return res;\n      });\n  };\n\n  return (\n    <>\n      <div className=\"flex justify-center items-center flex-col h-screen\">\n        <CityInput\n          changeHandler={changeHandler}\n          submitHandler={submitHandler}\n        />\n        {weather === null ? null : (\n          <WeatherContainer weather={weather} userTime={getTime()} />\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}